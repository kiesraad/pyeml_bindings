"""This file was generated by xsdata, v23.8, on 2023-10-17 11:34:35

Generator: DataclassGenerator
See: https://xsdata.readthedocs.io/
"""
from dataclasses import dataclass, field
from enum import Enum
from typing import List, Optional, Union
from xsdata.models.datatype import XmlDate, XmlDateTime
from pyeml_bindings.emlcore_kiesraad_strict import Emlstructure
from pyeml_bindings.kiesraad_eml_restrictions import (
    AffiliationStructureKr,
    CandidateStructureKr,
    ContestIdentifierStructureKr,
    EmlstructureKr,
    ElectionIdentifierStructureKr,
    ManagingAuthorityStructureKr,
)

__NAMESPACE__ = "urn:oasis:names:tc:evs:schema:eml"


class Emlstructure230Id(Enum):
    VALUE_230B = "230b"
    VALUE_230C = "230c"


@dataclass(kw_only=True)
class Emlstructure230(Emlstructure, EmlstructureKr):
    """
    Only TransactionId and IssueDate needed, CanoncalizationMethod added.
    """

    class Meta:
        name = "EMLstructure230"

    managing_authority: ManagingAuthorityStructureKr = field(
        metadata={
            "name": "ManagingAuthority",
            "type": "Element",
            "namespace": "urn:oasis:names:tc:evs:schema:eml",
            "required": True,
        }
    )
    issue_date: Union[XmlDate, XmlDateTime] = field(
        metadata={
            "name": "IssueDate",
            "type": "Element",
            "namespace": "urn:oasis:names:tc:evs:schema:eml",
            "required": True,
        }
    )
    creation_date_time: List[XmlDateTime] = field(
        default_factory=list,
        metadata={
            "name": "CreationDateTime",
            "type": "Element",
            "namespace": "http://www.kiesraad.nl/extensions",
            "min_occurs": 1,
            "max_occurs": 2,
        },
    )


@dataclass(kw_only=True)
class ElectionIdentifierStructure230(ElectionIdentifierStructureKr):
    """
    Mandatory ElectionCategory, and some additional Elements.
    """

    nomination_date: List[XmlDate] = field(
        default_factory=list,
        metadata={
            "name": "NominationDate",
            "type": "Element",
            "namespace": "http://www.kiesraad.nl/extensions",
            "min_occurs": 2,
            "max_occurs": 4,
        },
    )


@dataclass(kw_only=True)
class CandidateList:
    class Meta:
        namespace = "urn:oasis:names:tc:evs:schema:eml"

    list_date: Optional[Union[XmlDate, XmlDateTime]] = field(
        default=None,
        metadata={
            "name": "ListDate",
            "type": "Element",
        },
    )
    election: "CandidateList.Election" = field(
        metadata={
            "name": "Election",
            "type": "Element",
            "required": True,
        }
    )
    other_element: List[object] = field(
        default_factory=list,
        metadata={
            "type": "Wildcard",
            "namespace": "##other",
        },
    )

    @dataclass(kw_only=True)
    class Election:
        election_identifier: ElectionIdentifierStructure230 = field(
            metadata={
                "name": "ElectionIdentifier",
                "type": "Element",
                "required": True,
            }
        )
        contest: List["CandidateList.Election.Contest"] = field(
            default_factory=list,
            metadata={
                "name": "Contest",
                "type": "Element",
                "min_occurs": 1,
            },
        )

        @dataclass(kw_only=True)
        class Contest:
            contest_identifier: ContestIdentifierStructureKr = field(
                metadata={
                    "name": "ContestIdentifier",
                    "type": "Element",
                    "required": True,
                }
            )
            affiliation: List["CandidateList.Election.Contest.Affiliation"] = field(
                default_factory=list,
                metadata={
                    "name": "Affiliation",
                    "type": "Element",
                    "min_occurs": 1,
                },
            )
            other_element: List[object] = field(
                default_factory=list,
                metadata={
                    "type": "Wildcard",
                    "namespace": "##other",
                },
            )

            @dataclass(kw_only=True)
            class Affiliation(AffiliationStructureKr):
                candidate: List[CandidateStructureKr] = field(
                    default_factory=list,
                    metadata={
                        "name": "Candidate",
                        "type": "Element",
                        "min_occurs": 1,
                    },
                )


@dataclass(kw_only=True)
class Eml(Emlstructure230):
    class Meta:
        name = "EML"
        namespace = "urn:oasis:names:tc:evs:schema:eml"

    candidate_list: CandidateList = field(
        metadata={
            "name": "CandidateList",
            "type": "Element",
            "required": True,
        }
    )
